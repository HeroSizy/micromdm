image: golang:1.13.4

stages:
  - build
  - test

before_script:
  #- go get github.com/tools/godep
  # Don't use symlinks. Various tools like go test, etc. ignore symlinks
  #- cp -r /builds/user /go/src/github.com/user/
  # With alpine image we also need to do the following:
  #- apk add --update git
  #- cd /go/src/gitlab.com/${CI_PROJECT_PATH}

  # Fetch mods
  - go mod tidy

  # Tools for upload
  - export MC_HOST_tmp=$UPLOAD_PATH
  - apt update > /dev/null
  - apt install wget zip -y > /dev/null
  - wget https://storage.abaservices.ch/misc/mc -O /bin/mc > /dev/null 2> /dev/null
  - chmod +x /bin/mc


build:
  stage: build
  script:
    - make build

    - sha256sum build/linux/micromdm > micromdm.sha256
    - sha256sum service.systemd > service.systemd.sha256
    - mc cp build/linux/micromdm tmp/${UPLOAD_BUCKET}/${CI_COMMIT_REF_SLUG}/micromdm
    - mc cp micromdm.sha256 tmp/${UPLOAD_BUCKET}/${CI_COMMIT_REF_SLUG}/micromdm.sha256
    - mc cp service.systemd tmp/${UPLOAD_BUCKET}/${CI_COMMIT_REF_SLUG}/service.systemd
    - mc cp service.systemd.sha256 tmp/${UPLOAD_BUCKET}/${CI_COMMIT_REF_SLUG}/service.systemd.sha256
    - if [ "$CI_COMMIT_REF_SLUG" == "develop" ]; then wget --method=POST $HOOK_dev 2> /dev/null 1> /dev/null ; fi
    - if [ "$CI_COMMIT_REF_SLUG" == "int" ]; then wget --method=POST $HOOK_int 2> /dev/null 1> /dev/null ; fi
  only:
    - develop
    - int

test:
  stage: test
  script:
    - make test
  only:
    - dev_not_working

